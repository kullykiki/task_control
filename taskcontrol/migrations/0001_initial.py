# Generated by Django 5.0.3 on 2024-04-23 11:15

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'channel',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'district',
            },
        ),
        migrations.CreateModel(
            name='Geography',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
            options={
                'db_table': 'geography',
            },
        ),
        migrations.CreateModel(
            name='AddressBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('voide_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='address_create_by', to=settings.AUTH_USER_MODEL)),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='address_update_by', to=settings.AUTH_USER_MODEL)),
                ('voide_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='address_voide_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'address_base',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default=None, max_length=255, null=True, unique=True)),
                ('company_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('tax_id', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('create_client_date', models.DateField(blank=True, null=True)),
                ('detail', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('status', models.BooleanField(default=False)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_channel', to='taskcontrol.channel')),
                ('company_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_company_address', to='taskcontrol.addressbase')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_create_by', to=settings.AUTH_USER_MODEL)),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_update_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'client',
            },
        ),
        migrations.AddField(
            model_name='addressbase',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_addressbase', to='taskcontrol.client'),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('position', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('line', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('other', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact_address', to='taskcontrol.addressbase')),
                ('address2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_address', to='taskcontrol.addressbase')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_client', to='taskcontrol.client')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact_create_by', to=settings.AUTH_USER_MODEL)),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact_update_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'contact',
            },
        ),
        migrations.AddField(
            model_name='client',
            name='contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_contact', to='taskcontrol.contact'),
        ),
        migrations.AddField(
            model_name='addressbase',
            name='contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact_addressbase', to='taskcontrol.contact'),
        ),
        migrations.AddField(
            model_name='addressbase',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.district'),
        ),
        migrations.CreateModel(
            name='EngagementCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_category_create_by', to=settings.AUTH_USER_MODEL)),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_category_update_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'engagement_category',
            },
        ),
        migrations.CreateModel(
            name='Engagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_code', models.CharField(max_length=255, unique=True)),
                ('start_date_service', models.DateField()),
                ('end_date_service', models.DateField()),
                ('start_date_period', models.DateField()),
                ('end_date_period', models.DateField()),
                ('service_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=16, null=True)),
                ('administrator_date', models.DateTimeField(blank=True, null=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('review_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('voide_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('administrator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_engagements', to=settings.AUTH_USER_MODEL)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approver_engagements', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.client')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_create_by', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewer_engagements', to=settings.AUTH_USER_MODEL)),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_update_by', to=settings.AUTH_USER_MODEL)),
                ('voide_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_voide_by', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_category', to='taskcontrol.engagementcategory')),
            ],
            options={
                'db_table': 'engagement',
            },
        ),
        migrations.CreateModel(
            name='EngagementType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('description', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.engagementcategory')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_type_create_by', to=settings.AUTH_USER_MODEL)),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_type_update_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'engagement_type',
            },
        ),
        migrations.CreateModel(
            name='EngagementDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('notification', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('review_by', models.BooleanField(default=False)),
                ('approved_by', models.BooleanField(default=False)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('voide_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_detail_create_by', to=settings.AUTH_USER_MODEL)),
                ('engagement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.engagement')),
                ('engagement_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_detail_category', to='taskcontrol.engagementcategory')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_detail_update_by', to=settings.AUTH_USER_MODEL)),
                ('voide_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_detail_voide_by', to=settings.AUTH_USER_MODEL)),
                ('engagement_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_detail_type', to='taskcontrol.engagementtype')),
            ],
            options={
                'db_table': 'engagement_detail',
            },
        ),
        migrations.AddField(
            model_name='engagement',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_type', to='taskcontrol.engagementtype'),
        ),
        migrations.CreateModel(
            name='FileManage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_client', models.FileField(blank=True, null=True, upload_to='client_files/')),
                ('image_client', models.ImageField(blank=True, null=True, upload_to='client_images/')),
                ('file_engagement', models.FileField(blank=True, null=True, upload_to='engagement_files/')),
                ('image_engagement', models.ImageField(blank=True, null=True, upload_to='engagement_images/')),
                ('file_task', models.FileField(blank=True, null=True, upload_to='task_files/')),
                ('image_task', models.ImageField(blank=True, null=True, upload_to='task_images/')),
                ('description', models.TextField(blank=True, null=True)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.client')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='file_create_by', to=settings.AUTH_USER_MODEL)),
                ('engagement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.engagement')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='file_update_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'file_manage',
            },
        ),
        migrations.AddField(
            model_name='engagement',
            name='file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement_file', to='taskcontrol.filemanage'),
        ),
        migrations.AddField(
            model_name='client',
            name='file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_file', to='taskcontrol.filemanage'),
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provinces', to='taskcontrol.country')),
                ('geography', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provinces', to='taskcontrol.geography')),
            ],
            options={
                'db_table': 'province',
            },
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='taskcontrol.province'),
        ),
        migrations.AddField(
            model_name='addressbase',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.province'),
        ),
        migrations.CreateModel(
            name='RegisterTax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vat', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('vat_date', models.DateField(blank=True, null=True)),
                ('sbt', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('sbt_date', models.DateField(blank=True, null=True)),
                ('sso', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('sso_date', models.DateField(blank=True, null=True)),
                ('dbd_e_filling', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('dbd_e_filling_date', models.DateField(blank=True, null=True)),
                ('company', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('company_date', models.DateField(blank=True, null=True)),
                ('company_period_date', models.DateField(blank=True, null=True)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='register_tax_create_by', to=settings.AUTH_USER_MODEL)),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='register_tax_update_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'register_tax',
            },
        ),
        migrations.AddField(
            model_name='client',
            name='register_tax',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_register_tax', to='taskcontrol.registertax'),
        ),
        migrations.CreateModel(
            name='RegisterType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='register_type_create_by', to=settings.AUTH_USER_MODEL)),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='register_type_update_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'register_type',
            },
        ),
        migrations.CreateModel(
            name='ClientPassword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('password', models.TextField(blank=True, default=None, null=True)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.client')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_password_create_by', to=settings.AUTH_USER_MODEL)),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_password_update_by', to=settings.AUTH_USER_MODEL)),
                ('type_password', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.registertype')),
            ],
            options={
                'db_table': 'client_password',
            },
        ),
        migrations.CreateModel(
            name='Subdistrict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_th', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('zipcode', models.PositiveIntegerField()),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.district')),
            ],
            options={
                'db_table': 'subdistrict',
            },
        ),
        migrations.AddField(
            model_name='addressbase',
            name='subdistrict',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.subdistrict'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_job', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('OPEN JOB', 'Open Job'), ('IN PROGRESS', 'In Progress'), ('REVIEW', 'Review'), ('PENDING CLIENT', 'Pending Client'), ('DONE', 'Done')], default='OPEN JOB', max_length=20)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.client')),
                ('create_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_create_by', to=settings.AUTH_USER_MODEL)),
                ('engagement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.engagement')),
                ('update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_update_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'task',
            },
        ),
        migrations.AddField(
            model_name='filemanage',
            name='task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskcontrol.task'),
        ),
    ]
